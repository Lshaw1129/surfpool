name: Fetch Top Wallets (July 2025) + Artifact

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]

concurrency:
  group: fetch-top-wallets
  cancel-in-progress: true

jobs:
  run-script:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    # Use either two key secrets or a single JSON secret. Both are supported.
    env:
      HELIUS1: ${{ secrets.HELIUS_API_KEY_1 }}
      HELIUS2: ${{ secrets.HELIUS_API_KEY_2 }}
      HELIUS_RPC_URLS_JSON: ${{ secrets.HELIUS_RPC_URLS_JSON }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      - name: Install jq
        shell: bash
        run: |
          set -Eeuo pipefail
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: Sanity checks (script & secrets)
        shell: bash
        run: |
          set -Eeuo pipefail
          if [ ! -f "surfpool-backtest/fetch_top_wallets_july.js" ]; then
            echo "ERROR: Missing script at surfpool-backtest/fetch_top_wallets_july.js"
            exit 1
          fi
          # Allow either two keys or a single JSON array of URLs
          if [ -z "${HELIUS_RPC_URLS_JSON:-}" ]; then
            if [ -z "${HELIUS1:-}" ] || [ -z "${HELIUS2:-}" ]; then
              echo "ERROR: Provide HELIUS_API_KEY_1 and HELIUS_API_KEY_2 secrets OR HELIUS_RPC_URLS_JSON"
              exit 1
            fi
          fi
          echo "Sanity checks passed. Node: $(node -v)"

      - name: Create config.july.json (safe with jq)
        shell: bash
        run: |
          set -Eeuo pipefail
          mkdir -p data

          if [ -n "${HELIUS_RPC_URLS_JSON:-}" ]; then
            # Validate it's valid JSON array
            echo "${HELIUS_RPC_URLS_JSON}" | jq -e . >/dev/null
            RPCS_JSON="${HELIUS_RPC_URLS_JSON}"
          else
            RPCS_JSON=$(jq -cn --arg k1 "$HELIUS1" --arg k2 "$HELIUS2" \
              '[ "https://mainnet.helius-rpc.com/?api-key=\($k1)",
                 "https://mainnet.helius-rpc.com/?api-key=\($k2)" ]')
          fi

          jq -n \
            --argjson rpcs "$RPCS_JSON" \
            --arg start "2025-07-01T00:00:00Z" \
            --arg end   "2025-07-31T23:59:59Z" \
            --argjson max_minutes 170 \
            --argjson page_limit 1000 \
            --argjson per_tx_delay_ms 250 \
            --argjson max_backoff_ms 8000 \
            '{ rpc_urls: $rpcs,
               start_iso: $start,
               end_iso: $end,
               max_minutes: $max_minutes,
               page_limit: $page_limit,
               per_tx_delay_ms: $per_tx_delay_ms,
               max_backoff_ms: $max_backoff_ms }' > config.july.json

          echo "Wrote config.july.json (masked):"
          jq '
            .rpc_urls |= (map( gsub("api-key=[A-Za-z0-9-]+"; "api-key=****") ))
          ' config.july.json

      - name: Run fetch_top_wallets_july.js
        shell: bash
        timeout-minutes: 330
        run: |
          set -Eeuo pipefail
          mkdir -p data
          # If your script supports reading CONFIG path, export it:
          export CONFIG_PATH="$GITHUB_WORKSPACE/config.july.json"
          node surfpool-backtest/fetch_top_wallets_july.js 2>&1 | tee data/run.log || true

      - name: Summarize results (if present)
        if: always()
        shell: bash
        run: |
          echo "=== Files in ./data ==="
          ls -lh data || true
          echo
          echo "=== Top wallets preview (first 20) ==="
          if [ -f data/top_wallets_july.csv ]; then
            head -n 20 data/top_wallets_july.csv
          else
            echo "No top_wallets_july.csv produced."
          fi
          echo
          echo "=== Summary (if any) ==="
          if [ -f data/summary.json ]; then
            cat data/summary.json
          else
            echo "No summary.json found."
          fi

      - name: Upload artifact (all outputs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: top-wallets-july-results
          path: |
            data/**
            config.july.json
          if-no-files-found: warn
          retention-days: 14




